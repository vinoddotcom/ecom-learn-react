name: Deploy React App to AWS

on:
  push:
    branches:
      - main # Development branch
      - production # Production branch
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        type: choice
        required: true
        default: "development"
        options:
          - development
          - production

permissions:
  id-token: write # Required for OIDC authentication
  contents: read # Required to check out the repository

jobs:
  set-environment:
    name: Set Environment Variables
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
      s3_bucket: ${{ steps.set-env.outputs.s3_bucket }}
      distribution_id: ${{ steps.set-env.outputs.distribution_id }}
      aws_role_arn: ${{ steps.set-env.outputs.aws_role_arn }}

    steps:
      - name: Set environment based on branch or manual input
        id: set-env
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            ENVIRONMENT="${{ github.event.inputs.environment }}"
          elif [ "${{ github.ref }}" == "refs/heads/production" ]; then
            ENVIRONMENT="production"
          else
            ENVIRONMENT="development"
          fi

          echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT

          if [ "$ENVIRONMENT" == "production" ]; then
            echo "s3_bucket=vinod.digital" >> $GITHUB_OUTPUT
            echo "distribution_id=${{ secrets.PROD_CLOUDFRONT_DISTRIBUTION_ID }}" >> $GITHUB_OUTPUT
            echo "aws_role_arn=${{ secrets.PROD_AWS_ROLE_ARN }}" >> $GITHUB_OUTPUT
          else
            echo "s3_bucket=dev.vinod.digital" >> $GITHUB_OUTPUT
            echo "distribution_id=${{ secrets.DEV_CLOUDFRONT_DISTRIBUTION_ID }}" >> $GITHUB_OUTPUT
            echo "aws_role_arn=${{ secrets.DEV_AWS_ROLE_ARN }}" >> $GITHUB_OUTPUT
          fi

          echo "Deploying to $ENVIRONMENT environment"

  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: set-environment

    env:
      AWS_REGION: ap-south-1
      ENVIRONMENT: ${{ needs.set-environment.outputs.environment }}
      S3_BUCKET: ${{ needs.set-environment.outputs.s3_bucket }}
      DISTRIBUTION_ID: ${{ needs.set-environment.outputs.distribution_id }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build React app
        run: npm run build
        env:
          # Set environment-specific build variables if needed
          REACT_APP_API_URL: ${{ needs.set-environment.outputs.environment == 'production' && 'https://api.vinod.digital' || 'https://dev-api.vinod.digital' }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ needs.set-environment.outputs.aws_role_arn }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to S3
        run: |
          echo "Deploying to ${{ env.ENVIRONMENT }} environment"
          echo "S3 bucket: ${{ env.S3_BUCKET }}"
          aws s3 sync ./dist s3://${{ env.S3_BUCKET }}/ --delete

      - name: Invalidate CloudFront cache
        run: |
          echo "Creating CloudFront invalidation for distribution: ${{ env.DISTRIBUTION_ID }}"
          aws cloudfront create-invalidation --distribution-id ${{ env.DISTRIBUTION_ID }} --paths "/*"
